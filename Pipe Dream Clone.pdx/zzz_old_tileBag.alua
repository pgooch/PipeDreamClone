-- This file contains the definitiions of all the peices, and the logic used to look up
-- information about tiles based on thier index or get new random tiles, it does not manage
-- placing tiles or doing anything to them.

TILE_BAG = {
    {
        name = "Horizontal";
        sprites = {
            empty = PIPE_GFX_TABLE[2];
            full = PIPE_GFX_TABLE[8];
        };
        rotation = 0;
        paths = { N = " ", S = " ", E = "W", W = "E" };
    },
    {
        name = "Vertical";
        sprites = {
            empty = PIPE_GFX_TABLE[2];
            full = PIPE_GFX_TABLE[8];
        };
        rotation = 90;
        paths = { N = "S", S = "N", E = " ", W = " " };
    },
    {
        name = "CurveNW";
        sprites = {
            empty = PIPE_GFX_TABLE[3];
            full = PIPE_GFX_TABLE[9];
        };
        rotation = 90;
        paths = { N = "W", S = " ", E = " ", W = "N" };
    },
    {
        name = "CurveNE";
        sprites = {
            empty = PIPE_GFX_TABLE[3];
            full = PIPE_GFX_TABLE[9];
        };
        rotation = 180;
        paths = { N = "E", S = " ", E = "N", W = " " };
    },
    {
        name = "CurveSE";
        sprites = {
            empty = PIPE_GFX_TABLE[3];
            full = PIPE_GFX_TABLE[9];
        };
        rotation = 270;
        paths = { N = " ", S = "E", E = "S", W = " " };
    },
    {
        name = "CurveSW";
        sprites = {
            empty = PIPE_GFX_TABLE[3];
            full = PIPE_GFX_TABLE[9];
        };
        rotation = 0;
        paths = { N = " ", S = "W", E = " ", W = "S" };
    },
    {
        name = "Cross";
        sprites = {
            empty = PIPE_GFX_TABLE[4];
            full = PIPE_GFX_TABLE[5];
        };
        rotation = 0;
        paths = { N = "S", S = "N", E = "W", W = "E" };
    },
}
TILE_BAG[0] = {
    name = "Empty";
    sprites = {
        empty = PIPE_GFX_TABLE[1];
    };
    rotation = 0;
    paths = { N = " ", S = " ", E = " ", W = " " };
}
for n in pairs(TILE_BAG) do TILE_BAG[n].index = n end

-- Get all the details about a tile
function getTileDetailsFor(x,y)
	local n = ((y-1) * PLAYFIELD_X) + x;
	return getTileDetails(n);
end
function getTileDetails(n)
        print('getTileDetails', n)
    if n < 0 or TILE_BAG[n] == nil then
        print('requested an error')
        return {
            name = "Error!";
            sprites = {
                empty = PIPE_GFX_TABLE[19];
            };
            rotation = 0;
            paths = { N = " ", S = " ", E = " ", W = " " };
            index = 0;
        };
    else
        local tile = TILE_BAG[n];
        tile.index = n;
        return tile;
    end
end

-- Gets a random tile and returns the details
function getRandomTile()
    local index = math.random(1,7); -- will need to be weighted somehow
    local tile = TILE_BAG[index];
    tile.index = index
    return tile;
end
